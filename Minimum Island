#Write a function, minimum_island, that takes in a grid containing Ws and Ls. W represents water and L represents land. The function should return the size of the smallest island. An island is a vertically or horizontally connected region of land.

#You may assume that the grid contains at least one island.

def minimum_island(grid):
  visited=set()
  minsize = float("inf")
  for r in range(len(grid)):
    for c in range(len(grid[0])):
      size = exploresize(grid,r,c,visited)
      if size < minsize and size > 0:
        minsize = size 
  return minsize
      
def exploresize(grid,r,c,visited):
  rowbounds = 0<= r < len(grid)
  colbounds = 0<= c < len(grid[0])
  if not rowbounds or not colbounds:
    return 0
  if grid[r][c]== 'W':
    return 0
  pos = (r,c)
  if pos in visited:
    return 0
  visited.add(pos)
  size = 1
  size += exploresize(grid,r-1,c,visited)
  size += exploresize(grid,r+1,c,visited)
  size += exploresize(grid,r,c-1,visited)
  size += exploresize(grid,r,c+1,visited)
  return size
